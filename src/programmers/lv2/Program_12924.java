package programmers.lv2;

/*
숫자의 표현 - lv2
소요시간 - 약 30분

문제설명:
- 자연수 N에 대해서 연속된 자연수로 N을 표현할 수 있는 방법의 수를 구하기.
- N은 10,000이하 자연수

풀이설명:
- 수학 규칙 발견으로 풀었음. (아래 규칙 참고)
- n == n -> 무조건 1개는 됨.
-  1 == (1)  1
-  2 == (1)  2
-  3 == (2)  3 / 1+2
-  4 == (1)  4
-  5 == (2)  5 / 2+3
-  6 == (2)  6 / 1+2+3
-  7 == (2)  7 / 3+4
-  8 == (1)  8
-  9 == (2)  9 / 4+5 / 2+3+4
- 10 == (2) 10 / 1+2+3+4
- 11 == (2) 11 / 5+6
- 12 == (2) 12 / 3+4+5
- 13 == (2) 13 / 6+7
- 14 == (2) 14 / 2+3+4+5
- 15 == (4) 15 / 7+8 / 4+5+6 / 1+2+3+4+5
- 16 == (1) 16
- 17 == (3) 17 / 8+9 / 3+4+5+6
- 18 == (2) 18 / 5+6+7

2개짜리 -  3 ~ +2씩
3개짜리 -  6 ~ +3씩
4개짜리 - 10 ~ +4씩
5개짜리 - 15 ~ +5씩
.
.
.
N개짜리 -  ~ +N씩

p.s
- 슬라이딩 윈도우, 투포인터 써야할때 또 못찾더라. 다시 복습하자.
- 이 문제는 운이 좋게 규칙이 빨리 보여서 잘 풀었다.
- 평소 같았으면 완전탐색으로 위에 경우 다 찾으려고 난리를 피웠을텐데,, 다행이다.
- 시험때도 제발 이렇게 생각해라.
*/

import java.util.*;

public class Program_12924 {
    public static int solution(int n) {
        int[] result = new int[n + 1];

        Arrays.fill(result, 1); // n은 n에 대해 1씩.
        int num = 3;
        int addN = 2;

        while (num <= n) {
            for (int i = num; i <= n; i += addN) result[i]++;
            num += ++addN;
        }

        return result[n];
    }

    public static void main(String[] args) {
        System.out.println(solution(15));
    }
}
